# -*- coding: utf-8 -*-
"""FACE-RECOGNI

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1okj7eM3x_d9gLzwRh4_wt1xNl8PM_mIA
"""

import cv2
import numpy

cap=cv2.VideoCapture(0)

face_cascade=cv2.CascadeClassifier("haarcascade_frontalface_alt.xml")

skip=0

#store the different images
face_data=[]
dataset_path='D:\FACE-ROCOGINATION\data'

file_name=input("enter your name: ")

while True:
  ret,frame=cap.read()

  if ret==False:
    continue
  
  #to convert that rgba color image to graycode
  
  gray_frame=cv2.cvtColor(frame,cv2.COLOR_BGR2GRAY)

  
  faces=face_cascade.detectMultiScale(frame,1.3,5)
  faces=sorted(faces,key=lambda f:f[2]*f[3])
  
  #for that rectangle around faces
  #also to pick the last face(because it is the largest face according to area(f[2]*f[3]))
  for face in faces[-1:]: #yeh last wali image pick karega
    x,y,w,h =face
    cv2.rectangle(frame,(x,y),(x+w,y+h),(255, 0, 0, 1),2)
    
    
    #extract (crop out the required face): region of interest
    offset=10 #yaani ki image ki chaaro oor 10pixel ki padding dedenge hum ,with the use of offset.
    face_section=frame[y-offset:y+h+offset,x-offset:x+w+offset]
    face_section=cv2.resize(face_section,(100,100))
    
    skip+= 1
    if skip%10==0:
      face_data.append(face_section)
      print(len(face_data))
    
  cv2.imshow("Frame",frame)
  #now to show the face_section
  cv2.imshow("Face Section",face_section)
  

  key_pressed=cv2.waitKey(1) & 0xFF
  if key_pressed==ord('q'):
    break

#convet our face list array into a numpy array
face_data=numpy.asarray(face_data)
face_data=face_data.reshape((face_data.shape[0],-1))
print(face_data.shape)


#save this data into file
numpy.save(dataset_path+file_name+'.npy',face_data)
print("Data successfully save at "+ dataset_path + file_name+'.npy')




  
cap.release()
cv2.destroyAllWindows()
  
